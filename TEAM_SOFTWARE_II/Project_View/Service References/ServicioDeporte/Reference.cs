//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.34209
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Project_View.ServicioDeporte {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioDeporte.ITEAM_SOFTWARE")]
    public interface ITEAM_SOFTWARE {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITEAM_SOFTWARE/GetData", ReplyAction="http://tempuri.org/ITEAM_SOFTWARE/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITEAM_SOFTWARE/GetData", ReplyAction="http://tempuri.org/ITEAM_SOFTWARE/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITEAM_SOFTWARE/createSport", ReplyAction="http://tempuri.org/ITEAM_SOFTWARE/createSportResponse")]
        bool createSport(AccesoDatos.Modelo.deporte sport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITEAM_SOFTWARE/createSport", ReplyAction="http://tempuri.org/ITEAM_SOFTWARE/createSportResponse")]
        System.Threading.Tasks.Task<bool> createSportAsync(AccesoDatos.Modelo.deporte sport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITEAM_SOFTWARE/ChargeSportsList", ReplyAction="http://tempuri.org/ITEAM_SOFTWARE/ChargeSportsListResponse")]
        AccesoDatos.Modelo.deporte[] ChargeSportsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITEAM_SOFTWARE/ChargeSportsList", ReplyAction="http://tempuri.org/ITEAM_SOFTWARE/ChargeSportsListResponse")]
        System.Threading.Tasks.Task<AccesoDatos.Modelo.deporte[]> ChargeSportsListAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITEAM_SOFTWAREChannel : Project_View.ServicioDeporte.ITEAM_SOFTWARE, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TEAM_SOFTWAREClient : System.ServiceModel.ClientBase<Project_View.ServicioDeporte.ITEAM_SOFTWARE>, Project_View.ServicioDeporte.ITEAM_SOFTWARE {
        
        public TEAM_SOFTWAREClient() {
        }
        
        public TEAM_SOFTWAREClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TEAM_SOFTWAREClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TEAM_SOFTWAREClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TEAM_SOFTWAREClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public bool createSport(AccesoDatos.Modelo.deporte sport) {
            return base.Channel.createSport(sport);
        }
        
        public System.Threading.Tasks.Task<bool> createSportAsync(AccesoDatos.Modelo.deporte sport) {
            return base.Channel.createSportAsync(sport);
        }
        
        public AccesoDatos.Modelo.deporte[] ChargeSportsList() {
            return base.Channel.ChargeSportsList();
        }
        
        public System.Threading.Tasks.Task<AccesoDatos.Modelo.deporte[]> ChargeSportsListAsync() {
            return base.Channel.ChargeSportsListAsync();
        }
    }
}
