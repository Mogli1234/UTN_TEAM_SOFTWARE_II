//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.34209
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Project_View.ServicioParticipante {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioParticipante.IParticipantesWebService")]
    public interface IParticipantesWebService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IParticipantesWebService/InsertarParticipante", ReplyAction="http://tempuri.org/IParticipantesWebService/InsertarParticipanteResponse")]
        bool InsertarParticipante(AccesoDatos.Modelo.participante oParticipante);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IParticipantesWebService/InsertarParticipante", ReplyAction="http://tempuri.org/IParticipantesWebService/InsertarParticipanteResponse")]
        System.Threading.Tasks.Task<bool> InsertarParticipanteAsync(AccesoDatos.Modelo.participante oParticipante);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IParticipantesWebService/EditarParticipante", ReplyAction="http://tempuri.org/IParticipantesWebService/EditarParticipanteResponse")]
        bool EditarParticipante(AccesoDatos.Modelo.participante oParticipante);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IParticipantesWebService/EditarParticipante", ReplyAction="http://tempuri.org/IParticipantesWebService/EditarParticipanteResponse")]
        System.Threading.Tasks.Task<bool> EditarParticipanteAsync(AccesoDatos.Modelo.participante oParticipante);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IParticipantesWebService/EliminarParticipante", ReplyAction="http://tempuri.org/IParticipantesWebService/EliminarParticipanteResponse")]
        bool EliminarParticipante(AccesoDatos.Modelo.participante oParticipante);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IParticipantesWebService/EliminarParticipante", ReplyAction="http://tempuri.org/IParticipantesWebService/EliminarParticipanteResponse")]
        System.Threading.Tasks.Task<bool> EliminarParticipanteAsync(AccesoDatos.Modelo.participante oParticipante);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IParticipantesWebService/ListadoParticipantes", ReplyAction="http://tempuri.org/IParticipantesWebService/ListadoParticipantesResponse")]
        AccesoDatos.Modelo.participante[] ListadoParticipantes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IParticipantesWebService/ListadoParticipantes", ReplyAction="http://tempuri.org/IParticipantesWebService/ListadoParticipantesResponse")]
        System.Threading.Tasks.Task<AccesoDatos.Modelo.participante[]> ListadoParticipantesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IParticipantesWebServiceChannel : Project_View.ServicioParticipante.IParticipantesWebService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ParticipantesWebServiceClient : System.ServiceModel.ClientBase<Project_View.ServicioParticipante.IParticipantesWebService>, Project_View.ServicioParticipante.IParticipantesWebService {
        
        public ParticipantesWebServiceClient() {
        }
        
        public ParticipantesWebServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ParticipantesWebServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ParticipantesWebServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ParticipantesWebServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool InsertarParticipante(AccesoDatos.Modelo.participante oParticipante) {
            return base.Channel.InsertarParticipante(oParticipante);
        }
        
        public System.Threading.Tasks.Task<bool> InsertarParticipanteAsync(AccesoDatos.Modelo.participante oParticipante) {
            return base.Channel.InsertarParticipanteAsync(oParticipante);
        }
        
        public bool EditarParticipante(AccesoDatos.Modelo.participante oParticipante) {
            return base.Channel.EditarParticipante(oParticipante);
        }
        
        public System.Threading.Tasks.Task<bool> EditarParticipanteAsync(AccesoDatos.Modelo.participante oParticipante) {
            return base.Channel.EditarParticipanteAsync(oParticipante);
        }
        
        public bool EliminarParticipante(AccesoDatos.Modelo.participante oParticipante) {
            return base.Channel.EliminarParticipante(oParticipante);
        }
        
        public System.Threading.Tasks.Task<bool> EliminarParticipanteAsync(AccesoDatos.Modelo.participante oParticipante) {
            return base.Channel.EliminarParticipanteAsync(oParticipante);
        }
        
        public AccesoDatos.Modelo.participante[] ListadoParticipantes() {
            return base.Channel.ListadoParticipantes();
        }
        
        public System.Threading.Tasks.Task<AccesoDatos.Modelo.participante[]> ListadoParticipantesAsync() {
            return base.Channel.ListadoParticipantesAsync();
        }
    }
}
